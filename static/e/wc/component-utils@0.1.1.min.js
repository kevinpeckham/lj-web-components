export const ComponentUtils={breakpoints:["2xl","xl","lg","md","sm","xs","xxs"],breakpointMap:{"2xl":{min:"1440px",max:"9999px"},xl:{min:"1280px",max:"1439px"},lg:{min:"1024px",max:"1279px"},md:{min:"768px",max:"1023px"},sm:{min:"640px",max:"767px"},xs:{min:"420px",max:"639px"},xxs:{min:"0",max:"419px"}},camelToKebab:t=>t.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g,"$1-$2").toLowerCase(),nonCssAttKeywords:["alt","data","position","show","src","stylesheet","rel","tags","text","title","url","value"],cssAtts(t,e){const i=[...this.nonCssAttKeywords,...e??[]];return Object.keys(t).filter((t=>i.every((e=>!t.includes(e)))))},cssVars:(t,e,i)=>ComponentUtils.cssAtts(t,i).map((t=>`--${t}: ${e.attValue(t)};`)).join("\n"),getElAttributesById:(t,e)=>Object.keys(t.attributes).filter((t=>t.includes(`${e}-`))),getIds:t=>[...t.matchAll(/id="([^"]+)"/g)].map((t=>t[1])),hasValue:t=>!(!t||!t[0]),stringIfValue:(t,e,i)=>ComponentUtils.hasValue(t)&&(i||void 0===i)?e:"",kebabToCamel:t=>t.replace(/-(\w)/gi,(t=>t[1].toUpperCase())),pageXPadding:{"2xl":"6rem",xl:"5rem",lg:"4rem",md:"3rem",sm:"2.5rem",xs:"1rem",xxs:".75rem"},titleCase:t=>t.replace(/\b\w/g,(t=>t.toUpperCase())),paddingXStyles(){const t="#container, .container";return`${t} { padding-inline:${this.pageXPadding.xxs}; }`+" "+["xs","sm","md","lg","xl","2xl"].map((e=>`${(t=>`@media (min-width: ${ComponentUtils.breakpointMap[t].min})`)(e)} { ${t} { ${(t=>`padding-inline:${ComponentUtils.pageXPadding[t]};`)(e)} }}`)).join(" ")},widgetPaddingStyles(t){return`\n ${t=t??"#container"} {\n padding:64px ${this.pageXPadding.xxs} 96px;\n }\n @media (min-width: 420px) {\n ${t} {\n padding:64px ${this.pageXPadding.xs} 96px;\n }\n }\n @media (min-width: 640px) {\n ${t} {\n padding:64px 24px 96px;\n }\n }\n @media (min-width: 760px) {\n ${t} {\n padding:64px ${this.pageXPadding.md} 96px;\n }\n }\n @media (min-width: 1024px) {\n ${t} {\n padding:48px ${this.pageXPadding.lg} 76px;\n }\n }\n @media (min-width: 1280px) {\n ${t} {\n padding:64px ${this.pageXPadding.xl} 96px;\n }\n }\n @media (min-width: 1536px) {\n ${t} {\n padding:64px ${this.pageXPadding["2xl"]} 96px;\n }\n }`},preflight:'<style id="preflight">*,::before,::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:currentColor}::before,::after{--tw-content:""}html,:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;font-family:theme("fontFamily.sans",ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji");font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:theme("fontFamily.mono",ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace);font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,[type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::placeholder,textarea::placeholder{opacity:1;color:theme("colors.gray.400",#9ca3af)}button,[role="button"]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}</style>',updateElAttributes(t,e,i){const n=e.refs[i];this.getElAttributesById(t,i).forEach((i=>{const o=i.split("-")[1]??"",r=this.kebabToCamel(i),a=t.attributes[i],s=e[r]??a,l=("textContent"===o?n?.textContent:n?.getAttribute(o))!==s;"textContent"===o&&l?n.textContent=e[r]:o&&l&&n?.setAttribute(o,e[r])}))},updateManyElAttributes(t,e,i){i.forEach((i=>{this.updateElAttributes(t,e,i)}))},getFontAttributes:(t,e)=>Object.keys(t.attributes).filter((t=>t.includes("font-")||t.includes("text-")||t.includes("line-")||t.includes("letter-"))),updateFontAttributes(t,e){this.getFontAttributes(t,e).forEach((i=>{let n="font";i.includes("text-")&&(n="text"),i.includes("line-")&&(n="line"),i.includes("letter-")&&(n="letter");const o=i.split("-")[1]??"",r=i.split("-")[2]??"",a=this.kebabToCamel(i),s=t.attributes[i],l=e[a]??s,d=`--${n}-${o}${r?`-${r}`:""}`,p=e.refs.container.style.getPropertyValue("$cssVariable");l===p&&null!==p||e.refs.container.style.setProperty(`${d}`,l)}))},getColorAttributes:(t,e)=>Object.keys(t.attributes).filter((t=>t.includes("color-"))),updateColorAttributes(t,e){this.getColorAttributes(t,e).forEach((i=>{const n=i.split("-")[1]??"",o=this.kebabToCamel(i),r=t.attributes[i],a=e[o]??r,s=e.refs.container.style.getPropertyValue(`--color-${n}`);a===s&&null!==s||e.refs.container.style.setProperty(`--color-${n}`,a)}))},getSizeAttributes:(t,e)=>Object.keys(t.attributes).filter((t=>t.includes("size-")&&!t.includes("font-"))),updateSizeAttributes(t,e){this.getSizeAttributes(t,e).forEach((i=>{const n=i.split("-")[1]??"",o=this.kebabToCamel(i),r=t.attributes[i],a=e[o]??r,s=e.refs.container.style.getPropertyValue(`--size-${n}`);a===s&&null!==s||e.refs.container.style.setProperty(`--size-${n}`,a)}))},getRefs(t,e){const i=(t?.ids?.length>0?t.ids:e?.ids??[]).reduce(((t,i)=>({...t,[i]:e.shadowRoot?.getElementById(i)})),{});return i.container||(i.container=e.shadowRoot?.querySelector(".container")),i},createOAGS(t,e){return this.createGetters(t,e)},createGetters(t,e){for(let i of Object.keys(t.attributes)){const n=t.attributes[i]??"",o=i.includes("-")?i:this.camelToKebab(i),r=i.includes("-")?this.kebabToCamel(i):i;Object.defineProperty(e,r,{get:function(){return e.getAttribute(o)??n}})}}};export default ComponentUtils;