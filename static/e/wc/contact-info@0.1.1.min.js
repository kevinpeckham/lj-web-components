import{ComponentUtils as t}from"/e/wc/component-utils.0.1.1.min.js";class ContactInfo extends HTMLElement{get c(){return ContactInfo}static get attributes(){return{"color-background":"transparent","color-border":"currentColor","color-primary":"currentColor","color-secondary":"currentColor","container-border-width":"1px","container-height":"auto","container-width":"100%","container-max-width":"none","contacts-data-json":"[]","container-padding":"1.5em","font-family":"inherit","heading-text":"","body-text":"",stylesheet:""}}attValue(t){return this.getAttribute(t)??this.c.attributes[t]??""}static buildContact(n){const e=t.stringIfValue,{address:o,email:i,heading:r,phone:a,subheading:d}=n,s=a?a.replace(/[+ -]/gi,""):"";return`\n <div class="contact">\n <div class="contact-heading">\n ${e(r,`<div>${r}</div>`)}\n ${e(a,`<a href="tel:${s}" title="call ${a}">${a}</a>`)}\n ${e(i,`<div>${n?.email??""}</div>`)}\n </div>\n ${d?`<div class="contact-subheading">${d}</div>`:""}\n <div class="contact-address">\n ${e(o?.[0],`<div class="address-line">${o?.[0]}</div>`)}\n ${e(o?.[1],`<div class="address-line">${o?.[1]}</div>`)}\n ${e(o?.[2],`<div class="address-line">${o?.[2]}</div>`)}\n </div>\n </div>`}get els(){const n=t.stringIfValue,e=Object.keys(this.c.attributes).filter((t=>!(t.includes("stylesheet")||t.includes("text")||t.includes("data")||t.includes("link")))).map((t=>`--${t}: ${this.attValue(t)};`)).join("\n"),o=(JSON.parse(this.attValue("contacts-data-json"))??"[]").map((t=>this.c.buildContact(t))).join(""),i=this.attValue("body-text"),r=this.attValue("heading-text"),a=this.attValue("stylesheet");return`\n${n(a,`<style id="stylesheet">${this.attValue(a)}</style>`)}\n<div id="container style="${e}>${n(r,`<div id="heading">${r}</div>`)}\n <div id="info-grid">${o}</div>\n ${n(i,`<div id="body">${i}</div>`)}\n</div>\n`.trim()}static get styles(){return`\n${t.preflight}\n<style id="base">\nhost:, * { margin:0; box-sizing:border-box ; }\n*:empty { display: none; }\n#container {\n background: var(--color-background, transparent);\n border-radius: .3em;\n color: var(--color-primary, currentColor);\n font-family: var(--font-family, inherit);\n font-weight: 400;\n height: var(--container-height, auto);\n line-height: 1;\n padding: var(--container-padding, 1.5em);\n min-width: 300px;\n width: var(--container-width, 100%);\n}\n#heading{\n font-size:1.125em;\n font-weight: 500;\n margin-bottom: .75em;\n -webkit-font-smoothing: auto;\n -moz-osx-font-smoothing: auto;\n width:100%;\n}\n#info-grid {\n margin-bottom: .75em;\n}\n.contact {\n border-bottom: 1px solid var(--color-border, currentColor);\n border-left: 1px solid var(--color-border, currentColor);\n border-right: 1px solid var(--color-border, currentColor);\n padding: .75rem 1rem;\n max-width:100%;\n}\n.contact:first-child {\n border-top: 1px solid var(--color-border, currentColor);\n border-top-left-radius: .325em;\n border-top-right-radius: .325em;\n padding-top: 1rem;\n}\n.contact:last-child {\n border-bottom-left-radius: .325em;\n border-bottom-right-radius: .325em;\n padding-bottom: 1rem;\n}\n.contact-heading {\n display: flex;\n justify-content: space-between;\n margin-bottom: .5em;\n width:100%;\n}\n.contact-subheading {\n font-size: .85em;\n font-weight: 400;\n margin-bottom: .5em;\n opacity: .85;\n}\n.address-line {\n margin-bottom: .5em;\n}\n.address-line:last-child {\n margin-bottom: 0;\n}\n#body {\n color: var(--color-secondary, currentColor);\n font-size:.85em;\n font-weight:400;\n grid-column:1/span 2;\n line-height:1.3;\n opacity:.85;\n}\n</style>`}get template(){const t=document.createElement("template");return t.innerHTML=`${this.c.styles}${this.els}`.trim(),t}constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.shadowRoot?.appendChild(this.template.content.cloneNode(!0))}}customElements.define("contact-info",ContactInfo);export default ContactInfo;