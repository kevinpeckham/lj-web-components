import{ComponentUtils as t}from"/e/wc/component-utils@0.1.1.min.js";class CtaTout extends HTMLElement{get c(){return CtaTout}static get attributes(){return{"color-background":"transparent","color-border":"transparent","color-primary":"currentColor","container-border-width":"0","container-height":"auto","container-width":"100%","container-max-width":"none","container-padding":"1.5em","font-family":"inherit","heading-text":"","heading-font-size":"1.15rem","heading-font-weight":"700","heading-line-height":"1.3","heading-margin-bottom":".35rem","subheading-text":"","subheading-font-size":"1rem","subheading-font-weight":"500","subheading-line-height":"1.2","subheading-margin-bottom":".8rem","body-text":"","body-font-size":"1rem","body-line-height":"1.3","body-margin-bottom":"1.35rem","link-text":"","link-url":"/",stylesheet:""}}attValue(t){return this.getAttribute(t)??this.c.attributes[t]??""}get els(){const n=t.cssVars(this.c.attributes,this),e=t.stringIfValue,r=this.attValue("stylesheet"),o=this.attValue("heading-text"),i=this.attValue("subheading-text"),a=this.attValue("body-text"),d=this.attValue("link-text"),s=this.attValue("link-url");return`\n${e(r,`<style id="stylesheet">${r}</style>`)}\n<div id="container" style="${n}">\n ${e(o,`<div id="heading">${o}</div>`)}\n ${e(i,`<div id="subheading">${i}</div>`)}\n ${e(a,`<div id="body">${a}</div>`)}\n ${e(d,`<a id="link" href="${s}">${d}</a>`,s)}\n</div>\n`.trim()}get styles(){return`\n${t.preflight}\n<style id="base">\n*:empty {display:none;}\n#container {\n background: var(--color-background, transparent);\n border: var(--container-border-width, 0) solid var(--color-border, transparent);\n border-radius: .3em;\n color: var(--color-primary, currentColor);\n font-size: var(--body-font-size, 1rem);\n font-family:var(--font-family, inherit);\n line-height: 1.2;\n outline: 1px solid var(--color-border, transparent);\n max-width: var(--container-max-width, none);\n padding: var(--container-padding, 1.5em);\n width: var(--container-width, 100%);\n}\n#mark-container {\n aspect-ratio: 1 / 1;\n align-items: center;\n background-color:transparent;\n border-radius: 50%;\n display: flex;\n justify-content: center;\n margin-bottom:.5rem;\n position:relative;\n width:3rem;\n}\n#heading {\n display:block;\n font-size:var(--heading-font-size, 1rem);\n font-weight:700;\n line-height:var(--headingLineHeight, 1.3);\n margin-bottom:var(--heading-margin-bottom, .35rem);\n}\n#subheading {\n color: var(--color-secondary, currentColor);\n font-size:var(--subheading-font-size, 1rem);\n font-style:italic;\n font-weight:var(--subheading-font-weight, 500);\n line-height:1.3;\n margin-bottom:var(--subheading-margin-bottom, .8rem);\n opacity:1;\n}\n#body {\n font-size:var(--body-font-size, .85rem);\n line-height:var(--body-line-height, 1.3);\n margin-bottom:var(--body-margin-bottom, 1.35rem);\n opacity:.9;\n}\n#link {\n background-color:var(--color-primary, currentColor);\n border-radius:.35em;\n border:1px solid var(--color-border, transparent);\n color:var(--color-background, transparent);\n font-size:.8em;\n padding:.5em 1em;\n transition:background-color .15s, color .15s;\n width:fit-content;\n}\n#link:hover {\n background-color:var(--color-background, transparent);\n color:var(--color-primary, currentColor);\n}</style>`}get template(){const t=document.createElement("template");return t.innerHTML=`${this.styles}${this.els}`.trim(),t}constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.shadowRoot?.appendChild(this.template.content.cloneNode(!0))}}customElements.define("cta-tout",CtaTout);export default CtaTout;