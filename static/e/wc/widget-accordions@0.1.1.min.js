import{ComponentUtils as n}from"/e/wc/component-utils@0.1.1.min.js";class WidgetAccordions extends HTMLElement{get c(){return WidgetAccordions}static get attributes(){return{"body-text":"","card-aspect-ratio":"1/1","card-background-color":"white","card-border-radius":".35rem","card-box-shadow":"none","card-font-size":"100%","card-font-weight":"inherit","card-height":"auto","card-hover-opacity":"","card-hover-background-color":"","card-label-color":"inherit","card-label-font-size":"1rem","card-label-font-weight":"inherit","card-label-margin-bottom":".5rem","card-label-margin-top":".5rem","card-label-position":"below","card-max-width":"none","card-min-height":"auto","card-opacity":"100%","card-transition-property":"opacity","card-transition-duration":"0.3s","card-width":"100%","cards-data-json":"[]","color-accent":"currentColor","color-background":"#0B2E7E","color-primary":"currentColor","heading-font-size":"1.25rem","heading-font-weight":"bold","heading-link-url":"","heading-link-label":"","heading-margin-bottom":"1.5rem","heading-margin-top":"1.5rem","heading-text":"","meta-font-size":".75rem","meta-margin-bottom":".5rem","meta-text":"",stylesheet:""}}static html=n.stringIfValue;static buildTileHTML(n){const r=n.heading??"",e=n.text??"";return`\n <div class="tile">\n ${this.html(r,`<div class="card-heading">${r}</div>`)}\n ${this.html(e,`<div class="card-text">${e}</div>`)}\n </div>`}static buildTilesHTML(n){return n.map((n=>this.buildTileHTML(n))).join("")}buildGridHTML(){return(JSON.parse(this.attValue("cards-data-json"))??"[]").map((n=>{const r=this.c.buildTilesHTML(n.contents??[]),e=n.name??"",i=n.type??"";return""===r?"":`\n <div class="accordion ${i}">\n <div class="accordion-header">\n ${this.c.html(e,`<span>${e}</span>`)}\n <label>\n <div class="sr-only">close accordion drawer</div>\n <input type="checkbox" />\n <div class="icon-chevron">\n </div>\n </label>\n </div>\n ${this.c.html(r,`<div class="accordion-drawer">${r}</div>`)}\n </div>`})).join("")}attValue(n){return this.getAttribute(n)??this.c.attributes[n]??""}get els(){const r=n.cssVars(this.c.attributes,this),e=this.c.html,i=this.attValue("stylesheet"),t=this.attValue("body-text"),o=this.buildGridHTML(),a=this.attValue("heading-text")[0]+this.attValue("heading-text").substring(1).toLowerCase(),d=this.attValue("heading-link-url"),c=this.attValue("heading-link-label"),l=this.attValue("meta-text");return`\n${e(i,`<style id="stylesheet">${i}</style>`)}\n<div id="container" style="${r}"><div id="container-inner">\n ${e(l,`<div id="meta" style="">${l}</div>`)}\n <div id="heading-row">\n ${e(a,`<h2 id="heading">${a}</h2>`)}\n ${e(c,`<a id="heading-link" href="${d}">${c}</a>`,d)}\n </div>\n ${e(t,`<p id="text">${t}</p>`)}\n ${e(o,`<div id="accordions">${o}</div>`)}\n</div></div>`.trim()}static get styles(){return`\n ${n.preflight}\n <style id="base">\n *:empty { display:none; }\n #container {\n background-color: var(--color-background, transparent);\n color: var(--color-primary, currentColor);\n display:grid;\n align-items:start;\n width:100%;\n }\n ${n.widgetPaddingStyles()}\n #meta {\n color: var(--color-accent, currentColor);\n font-size: var(--font-size, .85rem);\n margin-bottom: var(--margin-bottom, 1.5rem);\n opacity:1;\n text-transform:uppercase;\n }\n #heading-row {\n align-items:center;\n display:flex;\n justify-content:space-between;\n margin-bottom:0;\n width:100%;\n }\n #heading {\n color: var(--color-primary, currentColor);\n filer:drop-shadow(0 1px 1px rgba(0, 0, 0, .05));\n font-size: 1.25rem;\n font-weight: var(--heading-font-weight, 600);\n margin-bottom: .5rem;\n max-width:576px;\n }\n #heading-link {\n color: var(--color-accent, currentColor);\n display:inline-block;\n font-size: .8rem;\n border: solid 1px var(--color-accent, currentColor);\n border-radius:.25rem;\n display:"inline-block";\n margin-bottom:.5rem;\n padding:.35rem .85rem;\n transition:background-color .15s ease;\n }\n @media (min-width: 640px) {\n #heading {\n font-size: 1.5rem;\n margin-bottom: .75rem;\n }\n }\n @media (min-width: 768px) {\n #heading {\n font-size: 1.5em;\n margin-bottom: .825rem;\n }\n }\n @media (min-width: 1024px) {\n #heading {\n font-size: 1.75em;\n }\n #heading-link:hover {\n background-color:var(--color-accent, currentColor);\n color:var(--color-primary, currentColor);\n }\n }\n #text {\n color: var(--color-primary, currentColor);\n display:block;\n max-width:none;\n margin-bottom:2rem;\n opacity:.9;\n }\n @media (min-width: 640px) {\n #text {\n padding:0;\n margin-bottom:48px;\n }\n }\n @media (min-width: 768px) {\n #text {\n max-width:576px;\n padding:0;\n margin-bottom:48px;\n }\n }\n @media (min-width: 1024px) {\n #text {\n max-width:576px;\n margin-bottom:56px;\n }\n }\n @media (min-width: 1280px) {\n #text {\n max-width:576px;\n margin-bottom:64px;\n }\n }\n #accordions {\n background:#CBD5E1;\n border-radius:.35rem;\n overflow-hidden;\n }\n #accordions .accordion {\n border-radius:.35rem;\n overflow:hidden;\n }\n #accordions .accordion-header {\n align-items:center;\n background: var(--color-primary, transparent);\n color: var(--color-background, currentColor);\n display:flex;\n justify-content:space-between;\n font-size: 1rem;\n font-weight: 500;\n padding:.5rem 1rem;\n width:100%;\n }\n #accordions .accordion .accordion-header label {\n align-items:center;\n aspect-ratio:1/1;\n border-radius:.25rem;\n display:flex;\n height:50px;\n justify-content:center;\n position:relative;\n pointer-events:auto;\n transition: background-color .15s;\n transform:translateX(-0%);\n width:50px;\n }\n #accordions .accordion .accordion-header label:hover {\n background-color:rgb(255 255 255 / 10%);\n }\n #accordions .accordion .accordion-header label input {\n display:none;\n }\n #accordions .accordion .accordion-header label .icon-chevron {\n align-items:center;\n color: var(--color-background, currentColor);\n display:flex;\n height:100%;\n width:100%;\n top:5px;\n justify-content:center;\n position:absolute;\n transition:transform .153s, top .153s, opacity .153s;\n transform-origin:50%;\n transform:rotate(-45deg);\n }\n #accordions .accordion .accordion-header label input:checked ~ .icon-chevron {\n transform:rotate(135deg);\n top:-5px;\n }\n #accordions .accordion .accordion-header label .icon-chevron:before {\n content:"";\n cursor:pointer;\n border-color:currentColor;\n border-style:solid;\n border-width: 1px 1px 0 0;\n display:block;\n height:30px;\n position:absolute;\n inset-0;\n width:30px;\n }\n #accordions .accordion-drawer {\n background:#CBD5E1;\n border-radius:.35rem;\n border-bottom:1px solid #CBD5E1;\n display:grid;\n height:0;\n grid-template-columns:repeat(1,minmax(0,1fr));\n padding:0 0 1px;\n row-gap:1rem;\n }\n #accordions .accordion:has(input:checked) .accordion-drawer {\n height:auto;\n padding:1.5rem 1rem 2rem;\n }\n #accordions .accordion.circles .accordion-drawer {\n column-gap:3rem;\n }\n @media (min-width: 640px) {\n #accordions .accordion-drawer {\n grid-template-columns:repeat(2,minmax(0,1fr));\n column-gap:1rem;\n }\n }\n @media (min-width: 768px) {\n #accordions .accordion-drawer {\n grid-template-columns:repeat(3,minmax(0,1fr));\n }\n }\n @media (min-width: 1024px) {\n #accordions .accordion-drawer {\n grid-template-columns:repeat(4,minmax(0,1fr));\n column-gap:1.5rem;\n }\n }\n #accordions .accordion .tile {\n background-color: var(--color-background, transparent);\n overflow:hidden;\n padding:1rem;\n }\n #accordions .accordion.boxes .tile, #accordions .accordion.stats .tile {\n border-radius:.35rem;\n overflow:hidden;\n width:100%;\n }\n #accordions .accordion.circles .tile {\n align-items:center;\n aspect-ratio:1/1;\n border-radius:99999px;\n display:flex;\n justify-content:center;\n text-align:center;\n width:100%;\n }\n #accordions .accordion .card-heading {\n color: var(--color-primary, currentColor);\n font-size: .9rem;\n font-weight: var(--heading-font-weight, 600);\n margin-bottom: .5rem;\n }\n #accordions .accordion.stats .card-heading {\n font-size:2rem;\n }\n #accordions .accordion .card-text {\n color: var(--color-primary, currentColor);\n font-size: .9rem;\n margin-bottom: .5rem;\n opacity:.9;\n }\n #grid {\n display:grid;\n grid-template-columns: grid-template-columns: repeat(1, minmax(0, 1fr));\n gap:1rem;\n width:100%;\n }\n @media (min-width: 640px) {\n #grid {\n grid-template-columns: repeat(2, minmax(0, 1fr));\n }\n }\n @media (min-width: 720px) {\n #grid {\n gap:1.25rem;\n grid-template-columns: repeat(3, minmax(0, 1fr));\n }\n }\n @media (min-width: 1024px) {\n #grid {\n column-gap:24px;\n grid-template-columns: repeat(4,minmax(0,1fr));\n place-content:center;\n }\n }\n @media (min-width: 1280px) {\n #grid {\n column-gap:32px;\n grid-template-columns: repeat(5,minmax(0,1fr));\n }\n }\n @media (min-width: 1536px) {\n #grid {\n column-gap:48px;\n grid-template-columns: repeat(6,minmax(0,1fr));\n }\n }\n #grid .tile {\n width:100%;\n }\n #grid .tile .tile-inner {\n aspect-ratio:1/1;\n background-color:var(--card-background-color, transparent);\n border-radius:var(--card-border-radius, .35rem);\n overflow:hidden;\n width:100%;\n }\n #grid .tile .card-label {\n font-size: .9rem;\n margin: var(--card-label-margin-top, .5rem) 0 var(--card-label-margin-bottom, .5rem);\n opacity:.85;\n text-underline-offset:.25em;\n transition:opacity .3s;\n }\n #grid .tile .tile-image {\n aspect-ratio:1/1;\n transition:scale .3s ease;\n }\n @media (min-width: 1024px) {\n #grid .tile:hover .card-label {\n opacity:1;\n text-decoration:underline;\n }\n #grid .tile:hover .tile-image {\n scale:1.2;\n }\n }\n .sr-only {\n border:0;\n clip:rect(0 0 0 0);\n height:1px;\n margin:-1px;\n overflow:hidden;\n padding:0;\n position:absolute;\n width:1px;\n }\n</style>`}get template(){const n=document.createElement("template");return n.innerHTML=`${this.c.styles}${this.els}`.trim(),n}constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.shadowRoot?.appendChild(this.template.content.cloneNode(!0))}}customElements.define("widget-accordions",WidgetAccordions);export default WidgetAccordions;