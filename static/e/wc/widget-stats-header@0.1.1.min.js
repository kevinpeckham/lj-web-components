import{ComponentUtils as t}from"/e/wc/component-utils@0.1.1.min.js";import e from"/e/wc/scrolling-stat@0.1.1.min.js";import n from"/e/wc/quick-grid@0.1.1.min.js";import a from"/e/wc/page-header@0.1.1.min.js";class WidgetStatsHeader extends HTMLElement{get c(){return WidgetStatsHeader}static get attributes(){return{"align-content":"start","align-items":"center","color-accent":"","color-background":"transparent","color-border":"transparent","color-primary":"currentColor","color-secondary":"currentColor","container-border-width":"1px","container-padding-x-xs":"16px","container-padding-x-sm":"24px","container-padding-x-md":"32px","container-padding-x-lg":"32px","container-padding-x-xl":"80px","container-padding-x-2xl":"80px","container-padding-y-xs":"48px","container-padding-y-sm":"64px","container-padding-y-md":"72px","container-padding-y-lg":"80px","container-padding-y-xl":"96px","container-padding-y-2xl":"96px","font-family":"inherit","grid-stylesheet":"","header-stylesheet":"","heading-text":"","heading-font-size-xs":"2.25rem","heading-font-size-sm":"2.25rem","heading-font-size-md":"2.5rem","heading-font-size-lg":"2.65rem","heading-font-size-xl":"3.5rem","heading-font-size-2xl":"3.75rem","heading-font-weight":"800","heading-margin-bottom":"1rem","justify-content":"center","justify-items":"legacy","subheading-font-size":"1rem","subheading-font-weight":"400","subheading-line-height":"1.2","subheading-margin-bottom":"2rem","subheading-text":"","subheading-opacity":".9","stat-animation-duration":"800","stat-color-background":"transparent","stat-color-primary":"currentColor","stat-color-border":"transparent","stat-padding":"","stat-max-width":"","stats-data-json":"[]","stat-stylesheet":"",stylesheet:""}}buildStatHTML(e){const n=this.attValue("stat-color-background"),a=this.attValue("stat-color-border"),i=this.attValue("stat-max-width"),s=this.attValue("stat-padding"),r=t.stringIfValue;return`\n <scrolling-stat animation-duration="600" animation-value-end="${e.value}" ${r(n,`color-background="${n}" `)}${r(a,`color-border="${a}" `)}${r(i,`container-max-width="${i}" `)}${r(s,`container-padding="${s}" `)}${r(e.caption,`caption-text="${e.caption}" `)}${r(e.suffix,`suffix-text="${e.suffix}" `)}\n ></scrolling-stat>`}buildGridHTML(){return(JSON.parse(this.attValue("stats-data-json"))??[]).map((t=>this.buildStatHTML(t))).join("")}attValue(t){return this.getAttribute(t)??this.c.attributes[t]??""}get els(){const e=t.stringIfValue,n=this.attValue("stylesheet"),a=this.attValue("color-background"),i=this.attValue("color-border"),s=this.attValue("color-primary"),r=this.attValue("font-family"),o=this.attValue("heading-font-size-xs"),d=this.attValue("heading-font-size-sm"),l=this.attValue("heading-font-size-md"),h=this.attValue("heading-font-size-lg"),g=this.attValue("heading-font-size-xl"),c=this.attValue("heading-font-size-2xl"),u=this.attValue("heading-font-weight"),m=this.attValue("heading-margin-bottom"),p=this.attValue("heading-text"),$=this.attValue("subheading-font-size"),f=this.attValue("subheading-font-weight"),x=this.attValue("subheading-margin-bottom"),b=this.attValue("subheading-opacity"),y=this.attValue("subheading-text"),V=this.attValue("header-stylesheet");return`\n ${e(n,`<style id="stylesheet">${n}</style>`)}\n<div\n id="container"\n style=" ${e(s,`--color-primary:${s}`)};${e(r,`--font-family:${r}`)}">\n <page-header\n ${e(a,`color-background="${a}"`)}\n ${e(i,`color-border="${i}"`)}\n ${e(s,`color-primary="${s}"`)}\n ${e(o,`heading-font-size-xs="${o}"`)}\n ${e(d,`heading-font-size-sm="${d}"`)}\n ${e(l,`heading-font-size-md="${l}"`)}\n ${e(h,`heading-font-size-lg="${h}"`)}\n ${e(g,`heading-font-size-xl="${g}"`)}\n ${e(c,`heading-font-size-2xl="${c}"`)}\n ${e(u,`heading-font-weight="${u}"`)}\n ${e(m,`heading-margin-bottom="${m}"`)}\n ${e(p,`heading-text="${p}"`)}\n ${e($,`subheading-font-size="${$}"`)}\n ${e(f,`subheading-font-weight="${f}"`)}\n ${e(x,`subheading-margin-bottom="${x}"`)}\n ${e(b,`subheading-opacity="${b}"`)}\n ${e(y,`subheading-text="${y}"`)}\n ${e(V,`stylesheet-text="${V}"`)}>\n <quick-grid>${this.buildGridHTML()}</quick-grid>\n </page-header>\n</div>`.trim()}static get styles(){return`\n${t.preflight}\n<style id="base">\n #container {\n color: var(--color-primary, currentColor);\n font-family: var(--font-family, inherit);\n }</style>`}get template(){const t=document.createElement("template");return t.innerHTML=`${this.c.styles}${this.els}`.trim(),t}constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.shadowRoot?.appendChild(this.template.content.cloneNode(!0))}}customElements.define("widget-stats-header",WidgetStatsHeader);export default WidgetStatsHeader;