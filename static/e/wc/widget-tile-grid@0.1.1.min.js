import{ComponentUtils as n}from"/e/wc/component-utils@0.1.1.min.js";class WidgetTileGrid extends HTMLElement{get c(){return WidgetTileGrid}static get attributes(){return{"body-text":"","card-aspect-ratio":"1/1","card-background-color":"white","card-border-radius":".35rem","card-box-shadow":"none","card-font-size":"100%","card-font-weight":"inherit","card-height":"auto","card-heading-color":"inherit","card-heading-font-size":"1.125rem","card-heading-font-weight":"500","card-heading-margin-bottom":".5rem","card-hover-opacity":"1","card-hover-background-color":"var(--card-background-color)","card-image-position":"cover","card-label-color":"var(--color-primary, currentColor)","card-label-font-size":"1rem","card-label-font-weight":"inherit","card-label-margin-bottom":".5rem","card-label-margin-top":".5rem","card-label-position":"below","card-max-width":"none","card-min-height":"auto","card-opacity":"100%","card-transition-property":"opacity","card-transition-duration":"0.3s","card-width":"100%","cards-data-json":"[]","color-accent":"currentColor","color-background":"#0B2E7E","color-primary":"currentColor","color-secondary":"currentColor","grid-columns":"1","grid-columns-sm":"2","grid-columns-xs":"2","grid-columns-md":"3","grid-columns-lg":"4","grid-columns-xl":"5","grid-columns-2xl":"6","heading-font-size":"1.25rem","heading-font-weight":"bold","heading-link-url":"","heading-link-label":"","heading-margin-bottom":"1.5rem","heading-margin-top":"1.5rem","heading-text":"","meta-font-size":".75rem","meta-margin-bottom":".5rem","meta-text":"",stylesheet:""}}buildTileHTML(n){const i=this.c.html,t=this.attValue("card-image-position"),r=n.cardLinkUrl??"",e=n.cardLinkTitle??"",a=n.cardLabelText??"",o=n.cardImageUrl??"",d=n.cardHeading??"",l=n.cardBody??"",m=r?"a":"div";return o?`\n<${m}\n class="tile"\n ${i(r,`href="${r}"`)}\n ${i(e,`title="${e}"`)}>\n <div class="tile-inner">\n ${i(d,`<h3 class="card-heading">${d}</h3>`)}\n ${i(l,`<p class="card-body">${l}</p>`)}\n <img\n ${i(a,`alt="${a}"`)}\n class="tile-image"\n ${i(t,`data-image-position="${t}"`)}\n src="${o}"\n loading="lazy"/>\n </div>\n ${i(a,`<div class="card-label">${a}</div>`)}\n</${m}>`:""}buildGridHTML(){return JSON.parse(this.attValue("cards-data-json")??"[]").map((n=>this.buildTileHTML(n))).join("")}attValue(n){return this.getAttribute(n)??this.c.attributes[n]??""}static html=n.stringIfValue;get els(){const i=n.cssVars(this.c.attributes,this),t=this.c.html,r=this.attValue("stylesheet"),e=this.attValue("body-text"),a=this.buildGridHTML()??"",o=this.attValue("heading-text"),d=this.attValue("heading-link-url"),l=this.attValue("heading-link-label"),m=this.attValue("meta-text");return`\n${t(r,`<style id="stylesheet">${r}</style>`)}\n<div id="container" style="${i}">\n <div id="container-inner">\n ${t(m,`<div id="meta" style="">${m}</div>`)}\n ${t(o,`<div id="heading-row">\n <h2 id="heading">${o}</h2>\n ${t(d,`<a id="heading-link" href="${d}">${l}</a>`,l)}\n </div>`)}\n ${t(e,`<p id="text">${e}</p>`)}\n ${t(a,`<div id="grid">${a}</div>`)}\n </div>\n</div>`.trim()}get styles(){return`\n ${n.preflight}\n <style id="base">\n #container {\n }\n #container {\n background-color: var(--color-background, transparent);\n color: var(--color-primary, currentColor);\n display:grid;\n align-items:start;\n width:100%;\n }\n ${n.widgetPaddingStyles()}\n #meta {\n color: var(--color-accent, currentColor);\n font-size: var(--font-size, .85rem);\n margin-bottom: var(--margin-bottom, 1.5rem);\n opacity:.9;\n text-transform:uppercase;\n }\n /* Heading */\n #heading-row {\n align-items:center;\n display:flex;\n justify-content:space-between;\n margin-bottom:0;\n width:100%;\n }\n #heading {\n color: var(--color-primary, currentColor);\n font-size: 1.25rem;\n font-weight: var(--heading-font-weight, 600);\n margin-bottom: .5rem;\n }\n #heading-link {\n color: var(--color-accent, currentColor);\n display:inline-block;\n font-size: .8rem;\n border: solid 1px var(--color-accent, currentColor);\n border-radius:.25rem;\n margin-bottom:.5rem;\n padding:.35rem .85rem;\n transition:background-color .15s ease;\n }\n @media (min-width: 640px) {\n #heading {\n font-size: 1.5rem;\n margin-bottom: .75rem;\n }\n }\n @media (min-width: 768px) {\n #heading {\n font-size: 1.5em;\n margin-bottom: .825rem;\n }\n }\n @media (min-width: 1024px) {\n #heading {\n font-size: 1.75em;\n }\n #heading-link:hover {\n background-color:var(--color-accent, currentColor);\n color:var(--color-primary, currentColor);\n }\n }\n #text {\n color: var(--color-primary, currentColor);\n display:block;\n max-width:none;\n margin-bottom:2rem;\n opacity:.9;\n }\n @media (min-width: 640px) {\n #text {\n padding:0;\n margin-bottom:48px;\n }\n }\n @media (min-width: 768px) {\n #text {\n max-width:576px;\n padding:0;\n margin-bottom:48px;\n }\n }\n @media (min-width: 1024px) {\n #text {\n max-width:576px;\n margin-bottom:56px;\n }\n }\n @media (min-width: 1280px) {\n #text {\n max-width:576px;\n margin-bottom:64px;\n }\n }\n #grid {\n display:grid;\n grid-template-columns: grid-template-columns: repeat(1, minmax(0, 1fr));\n gap:1rem;\n width:100%;\n }\n @media (min-width: 420px) {\n #grid {\n grid-template-columns: repeat(var(--grid-columns-xs), minmax(0, 1fr));\n }\n }\n @media (min-width: 640px) {\n #grid {\n grid-template-columns: repeat(var(--grid-columns-sm), minmax(0, 1fr));\n }\n }\n @media (min-width: 768px) {\n #grid {\n gap:1.25rem;\n grid-template-columns: repeat(var(--grid-columns-md), minmax(0, 1fr))\n }\n }\n @media (min-width: 1024px) {\n #grid {\n column-gap:24px;\n grid-template-columns: repeat(var(--grid-columns-lg), minmax(0, 1fr));\n place-content:center;\n }\n }\n @media (min-width: 1280px) {\n #grid {\n column-gap:32px;\n grid-template-columns: repeat(var(--grid-columns-xl), minmax(0, 1fr))\n }\n }\n @media (min-width: 1536px) {\n #grid {\n column-gap:48px;\n grid-template-columns: repeat(var(--grid-columns-2xl), minmax(0, 1fr))\n }\n }\n #grid .tile {\n position:relative;\n width:100%;\n }\n #grid .tile .tile-inner {\n aspect-ratio:1/1;\n background-color:var(--card-background-color, transparent);\n border-radius:var(--card-border-radius, .35rem);\n box-shadow:var(--card-box-shadow, none);\n overflow:hidden;\n padding:1rem;\n position:relative;\n width:100%;\n }\n #grid .tile .card-label {\n color: var(--card-label-color, var(--color-primary, currentColor));\n font-size: .9rem;\n margin: var(--card-label-margin-top, .5rem) 0 var(--card-label-margin-bottom, .5rem);\n opacity:.85;\n text-underline-offset:.25em;\n transition:opacity .3s;\n }\n #grid .tile .card-heading {\n color:var(--card-heading-color, inherit);\n font-size: var(--card-heading-font-size, 1rem);\n font-weight: var(--card-heading-font-weight, inherit);\n margin-bottom: var(--card-heading-margin-bottom, .5rem);\n opacity:.85;\n }\n #grid .tile .tile-image {\n aspect-ratio:1/1;\n }\n #grid .tile .tile-image[data-image-position="cover"] {\n height:100%;\n object-fit:cover;\n overflow:hidden;\n position:absolute;\n inset:0;\n transition:scale .3s ease;\n width:100%;\n }\n #grid .tile .tile-image[data-image-position="thumb"] {\n border-radius:.25rem;\n height:4rem;\n object-fit:cover;\n overflow:hidden;\n position:absolute;\n bottom:1rem;\n right:1rem;\n width:4rem;\n }\n @media (min-width: 1024px) {\n #grid .tile:hover .card-label {\n opacity:1;\n text-decoration:underline;\n }\n #grid .tile:hover .tile-image[data-image-position="cover"] {\n scale:1.2;\n }\n }\n</style>`}get template(){const n=document.createElement("template");return n.innerHTML=`${this.styles}${this.els}`.trim(),n}constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.shadowRoot?.appendChild(this.template.content.cloneNode(!0))}}customElements.define("widget-tile-grid",WidgetTileGrid);export default WidgetTileGrid;