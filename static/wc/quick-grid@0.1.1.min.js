import{ComponentUtils as n}from"/e/wc/component-utils@0.1.1.min.js";class QuickGrid extends HTMLElement{get c(){return QuickGrid}static get attributes(){return{"align-content":"start","align-items":"center","justify-content":"start","justify-items":"legacy","gap-x-xs":"1rem","gap-x-sm":"1rem","gap-x-md":"1rem","gap-x-lg":"1rem","gap-x-xl":"1rem","gap-x-2xl":"1rem","gap-y-xs":"1rem","gap-y-sm":"1rem","gap-y-md":"1rem","gap-y-lg":"1rem","gap-y-xl":"1rem","gap-y-2xl":"1rem","grid-columns-xs":"1","grid-columns-sm":"2","grid-columns-md":"3","grid-columns-lg":"4","grid-columns-xl":"4","grid-columns-2xl":"5","grid-rows-xs":"none","grid-rows-sm":"none","grid-rows-md":"none","grid-rows-lg":"none","grid-rows-xl":"none","grid-rows-2xl":"none","padding-x":"0","grid-padding-top":"1rem","grid-padding-bottom":"0",stylesheet:""}}attValue(n){return this.getAttribute(n)??this.c.attributes[n]??""}get els(){const e=n.cssVars(this.c.attributes,this),t=n.stringIfValue,r=this.attValue("stylesheet");return`\n${t(r,`<style id="stylesheet">${r}</style>`)}\n<slot id="container" style="${e}">\n</slot>`.trim()}get styles(){return`\n ${n.preflight}\n <style id="base">\n :host, *:not(style) {\n display:block;\n box-sizing:border-box;\n margin:0; }\n #container {\n align-content:var(--align-content);\n align-items:var(--align-items);\n display:grid;\n gap:var(--gap-y-xs) var(--gap-x-xs);\n grid-template-columns:repeat(var(--grid-columns-xs, 1), minmax(0, 1fr));\n grid-template-rows:${"none"===this.attValue("grid-rows-xs")?"none":"repeat(var(--grid-rows-xs, none), minmax(0, 1fr))"};\n justify-content:var(--justify-content);\n justify-items:var(--justify-items);\n padding:var(--grid-padding-top) var(--padding-x) var(--grid-padding-bottom);\n width:100%;\n }\n @media (min-width: 640px) {\n #container {\n gap:var(--gap-y-sm) var(--gap-x-sm);\n grid-template-columns:repeat(var(--grid-columns-sm, 2), minmax(0, 1fr));\n grid-template-rows:${"none"===this.attValue("grid-rows-sm")?"none":"repeat(var(--grid-rows-sm, none), minmax(0, 1fr))"};\n }\n }\n @media (min-width: 768px) {\n #container {\n gap:var(--gap-y-md) var(--gap-x-md);\n grid-template-columns:repeat(var(--grid-columns-md, 3), minmax(0, 1fr));\n grid-template-rows:${"none"===this.attValue("grid-rows-md")?"none":"repeat(var(--grid-rows-md, none), minmax(0, 1fr))"};\n }\n }\n @media (min-width: 1024px) {\n #container {\n gap:var(--gap-y-lg) var(--gap-x-lg);\n grid-template-columns:repeat(var(--grid-columns-lg, 4), minmax(0, 1fr));\n grid-template-rows:${"none"===this.attValue("grid-rows-lg")?"none":"repeat(var(--grid-rows-lg, none), minmax(0, 1fr))"};\n }\n }\n @media (min-width: 1280px) {\n #container {\n gap:var(--gap-y-xl) var(--gap-x-xl);\n grid-template-columns:repeat(var(--grid-columns-xl, 4), minmax(0, 1fr));\n grid-template-rows:${"none"===this.attValue("grid-rows-xl")?"none":"repeat(var(--grid-rows-xl, none), minmax(0, 1fr))"};\n }\n }\n @media (min-width: 1536px) {\n #container {\n gap:var(--gap-y-2xl) var(--gap-x-2xl);\n grid-template-columns:repeat(var(--grid-columns-2xl, 5), minmax(0, 1fr));\n grid-template-rows:${"none"===this.attValue("grid-rows-2xl")?"none":"repeat(var(--grid-rows-2xl, none), minmax(0, 1fr))"};\n }\n</style>`}get template(){const n=document.createElement("template");return n.innerHTML=`${this.styles}${this.els}`.trim(),n}constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.shadowRoot?.appendChild(this.template.content.cloneNode(!0))}}customElements.define("quick-grid",QuickGrid);export default QuickGrid;