import{ComponentUtils as t}from"/e/wc/component-utils@0.1.1.min.js";class ScrollingStat extends HTMLElement{get c(){return ScrollingStat}#t=!1;#e=0;#n=0;#a=99;#i=0;#r=0;static get attributes(){return{"animation-duration":"800","animation-value-end":"99","animation-value-start":"0","color-background":"transparent","color-border":"currentColor","color-primary":"currentColor","color-secondary":"currentColor","container-border-width":"1px","container-height":"auto","container-width":"100%","container-max-width":"none","container-padding":"1.5em","font-family":"inherit","suffix-text":"","caption-text":"",stylesheet:""}}static get observedAttributes(){return Object.keys(this.attributes)}attValue(t){return this.getAttribute(t)??this.c.attributes[t]??""}get els(){const e=t.cssVars(this.c.attributes,this),n=t.stringIfValue,a=this.attValue("animation-value-start"),i=this.attValue("caption-text"),r=this.attValue("suffix-text"),s=this.attValue("stylesheet");return`\n${n(s,`<style id="stylesheet">${s}</style>`)}\n<span id="container" style="${e}">\n ${n(a,`<span id="animation">${a}</span>`)}\n ${n(r,`<span id="suffix">${r}</span>`)}\n ${n(i,`<span id="caption">${i}</span>`)}\n</span>\n`.trim()}static get styles(){return`\n${t.preflight}\n<style id="base">\n#container {\n align-items: baseline;\n background: var(--color-background, transparent);\n border: 1px solid var(--color-border, transparent);\n border-radius: .3em;\n border-width: var(--container-border-width, 1px);\n color: var(--color-primary, currentColor);\n display: grid;\n font-family: var(--font-family, inherit);\n font-weight: 800;\n gap: .3em;\n grid: auto-flow/auto 1fr;\n height: var(--container-height, auto);\n line-height: 1;\n outline: 1px solid var(--color-border, transparent);\n padding: var(--container-padding, 1.5em);\n max-width: var(--container-max-width, none);\n width: var(--container-width, 100%);\n}\n#animation{\n font-size:2.75em;\n -webkit-font-smoothing: auto;\n -moz-osx-font-smoothing: auto;\n}\n#suffix {\n font-size:1.9em;\n}\n#caption {\n color: var(--color-secondary, currentColor);\n font-size:.9em;\n font-style:italic;\n font-weight:400;\n grid-column:1/span 2;\n line-height:1.3;\n opacity:.9;\n}\n</style>`}get template(){const t=document.createElement("template");return t.innerHTML=`${this.c.styles}${this.els}`.trim(),t}static tween(t){t.startTime||(t.startTime=Date.now());const e=Date.now()-t.startTime,n=Math.min(e/t.duration,1),a=t.start+(t.end-t.start)*n;t.updateAnimationText(a.toFixed(t.places)),e<t.duration?window.requestAnimationFrame((()=>this.tween(t))):t.updateAnimationText(`${t.end}`)}static places(t,e=2){return t?Math.min((t.split(".")[1]??"")?.length,e):0}static scrubNumberString(t,e,n){if(e=isNaN(parseFloat(e))?"0":parseFloat(e).toString(),!t)return e;let a=t.toString().replace(/[^\d-.]+/g,"");if(a=a.replace(/(?!^)-+/g,"").replace(/\.(?=.*\.)/g,""),"number"==typeof n&&n>0){const t=a?.split(".");t.length>1&&(a=t[0]+"."+t[1].substring(0,n))}return isNaN(parseFloat(a))?e:a}constructor(){super(),this.attachShadow({mode:"open"}),this.connectedCallback=this.connectedCallback.bind(this),this.observerCallback=this.observerCallback.bind(this)}connectedCallback(){this.shadowRoot?.appendChild(this.template.content.cloneNode(!0)),this.resetAnimation();const t=this.shadowRoot?.getElementById("container"),e=new IntersectionObserver(this.observerCallback,{rootMargin:"0%",threshold:.5});t&&e.observe(t)}get startTime(){return this.#e}set startTime(t){t&&"number"==typeof t&&(this.#e=t)}resetStartTime(){this.startTime=0}get isOnScreen(){return this.#t}set isOnScreen(t){"boolean"==typeof t&&(this.#t=t),!0===t&&(this.#e=0,this.c.tween(this))}get end(){return this.#a}set end(t){"number"==typeof t&&(this.#a=t)}updateEnd(){const t=this.attValue("animation-value-end");this.end=this.start=parseFloat(this.c.scrubNumberString(t,`${t}`,2))}get start(){return this.#n}set start(t){"number"==typeof t&&(this.#n=t)}updateStart(){const t=this.attValue("animation-value-start");this.start=parseFloat(this.c.scrubNumberString(t,`${t}`,2))}get duration(){return this.#i}set duration(t){"number"==typeof t&&(this.#i=t)}updateDuration(){const t=this.attValue("animation-duration");this.duration=Math.abs(parseInt(this.c.scrubNumberString(this.attValue("animation-duration"),`${t}`,0)))}get places(){return this.#r}set places(t){"number"==typeof t&&(this.#r=t)}updatePlaces(){this.places=this.c.places(this.attValue("animation-value-end"),2)}attributeChangedCallback(){this.resetAnimation()}observerCallback(t){const e=t[0].isIntersecting;e!=this.isOnScreen&&(this.isOnScreen=e)}updateAnimationText(t){const e=this.shadowRoot?.getElementById("animation");e&&(e.textContent=t??"")}resetAnimation(){this.updateEnd(),this.updatePlaces(),this.updateStart(),this.updateDuration(),this.resetStartTime()}}customElements.define("scrolling-stat",ScrollingStat);export default ScrollingStat;