import{ComponentUtils as n}from"/e/wc/component-utils@0.1.1.min.js";class WidgetTopicsGrid extends HTMLElement{get c(){return WidgetTopicsGrid}static get attributes(){return{"body-text":"","color-background":"#0B2E7E","color-primary":"currentColor","heading-font-size":"1.25rem","heading-font-weight":"600","heading-margin-bottom":"1.5rem","heading-margin-top":"1.5rem","heading-text":"","link-url":"","link-label":"","topics-data-json":"[]",stylesheet:""}}static buildSection(n){return`\n \x3c!-- section icon list --\x3e\n <div class="topic">\n <img class="topic-icon" loading="lazy" src="${n?.["icon-url"]??""}" alt="${n?.heading??""}">\n <h3 class="topic-heading">${n?.heading??""}</h3>\n <p class="topic-text">${n?.text??""}</p>\n <a class="topic-link" href="${n?.["link-url"]??""}" title="learn more about ${n.heading}">${n?.["link-label"]??""}</a>\n </div>`}buildTopicsHTML(){return(JSON.parse(this.attValue("topics-data-json"))??[]).map((n=>this.c.buildSection(n))).join("")}attValue(n){return this.getAttribute(n)??this.c.attributes[n]??""}get els(){const t=n.stringIfValue,i=this.attValue("body-text"),e=this.attValue("heading-text"),o=this.buildTopicsHTML();return`\n<style id="stylesheet">${this.attValue("stylesheet")}</style>\n<main id="container" style="${n.cssVars(this.c.attributes,this)}">\n ${t(e,`<h2 id="heading">${e}</h2>`)}\n ${t(i,`<p id="text">${i}</p>`)}\n ${t(o,`<div id="topics">${this.buildTopicsHTML()}</div>`)}\n</main>`.trim()}get styles(){return`\n ${n.preflight}\n <style id="base">\n :host, *:not(style) {\n webkit-font-smoothing: antialiased;\n -moz-osx-font-smoothing: grayscale; }\n #container {\n align-items:start;\n background-color: var(--color-background, transparent);\n border-bottom: solid 1px var(--color-primary, currentColor);\n color: var(--color-primary, currentColor);\n display:grid;\n grid-template-columns: grid-template-columns: repeat(1, minmax(0, 1fr));\n padding:64px 16px 96px;\n place-items-start;\n place-content:start;\n position:relative;\n width:100%;\n }\n @media (min-width: 420px) { #container { padding-block:64px 96px; }}\n @media (min-width: 1024px) { #container { padding-block:48px 76px; }}\n @media (min-width: 1280px) { #container { padding-block:64px 96px; }}\n ${n.paddingXStyles()}\n #heading {\n color: var(--color-primary, currentColor);\n font-size: 1.25rem;\n font-weight: var(--heading-font-weight, 600);\n margin-bottom: 1rem;\n max-width: 576px;\n }\n @media (min-width: 640px) {\n #heading {\n font-size: 1.5rem;\n margin-bottom: 1rem;\n }\n }\n @media (min-width: 768px) {\n #heading {\n font-size: 1.5em;\n margin-bottom: 1rem;\n }\n }\n @media (min-width: 1024px) {\n #heading {\n font-size: 1.75em;\n }\n #heading-link:hover {\n background-color:var(--color-accent, currentColor);\n color:var(--color-primary, currentColor);\n }\n }\n #text {\n opacity:.9;\n max-width:576px;\n }\n #topics {\n display:grid;\n row-gap:4rem;\n padding-top:2rem;\n grid-template-columns: repeat(1, minmax(0, 1fr));\n }\n @media (min-width: 640px) {}\n @media (min-width: 768px) {\n #topics {\n column-gap:2rem;\n grid-template-columns: repeat(2, minmax(0, 1fr));\n padding-top:3rem;\n }\n }\n @media (min-width: 1024px) {\n #topics {\n column-gap:3rem;\n grid-template-columns: repeat(2, minmax(0, 1fr));\n padding-top:3rem;\n }\n }\n @media (min-width: 1280px) {\n #topics {\n column-gap:4rem;\n grid-template-columns: repeat(3, minmax(0, 1fr));\n padding-top:3rem;\n }\n }\n .topic-icon {\n background-color:var(--color-primary, darkblue);\n border-radius:50%;\n margin-bottom:1rem;\n padding:1rem;\n object-fit:contain;\n opacity:.9;\n overflow:visible;\n width:5rem;\n }\n .topic-heading {\n font-size: 1rem;\n font-weight: 700;\n line-height:snug;\n margin-bottom: .5rem;\n max-width: 576px;\n opacity:.95;\n }\n .topic-text {\n color: var(--color-primary, currentColor);\n display:block;\n font-size:.95rem;\n line-height:1.6;\n max-width:none;\n margin-bottom:1rem;\n opacity:.9;\n }\n @media (min-width: 640px) {\n .topic-text {\n padding:0;\n }\n }\n @media (min-width: 768px) {\n .topic-text {\n font-size:.9rem;\n max-width:440px;\n padding:0;\n }\n }\n .topic-link {\n color:var(--color-primary, currentColor);\n display:inline-block;\n font-size:.85em;\n border: solid 1px var(--color-primary, currentColor);\n border-radius:.25rem;\n max-width:fit;\n opacity:.9;\n padding:.25rem .85rem;\n transition-property:background-color, color, opacity;\n transition-duration:.15s;\n transition-timing-function:ease;\n }\n .topic-link:hover {\n background-color:var(--color-primary, currentColor);\n color:var(--color-background, currentColor);\n opacity:1;\n }\n</style>`}get template(){const n=document.createElement("template");return n.innerHTML=`${this.styles}${this.els}`.trim(),n}constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.shadowRoot?.appendChild(this.template.content.cloneNode(!0))}}customElements.define("widget-topics-grid",WidgetTopicsGrid);export default WidgetTopicsGrid;